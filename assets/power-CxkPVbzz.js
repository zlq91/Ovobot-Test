import{G as o,T as w,M as T,X as c,$ as e,I as i,F as a,a8 as F,D as B,a3 as O}from"./DarkTheme-gFe2bpMP.js";const I={supported:!1,analyticsChanges:{}};I.initialize=function(R){const E=this;o.active_tab!="power"&&(o.active_tab="power"),o.calibrationManager&&o.calibrationManager.destroy(),o.calibrationManagerConfirmation&&o.calibrationManagerConfirmation.destroy();function V(){T.send_message(c.MSP_STATUS,!1,!1,Y)}function Y(){T.send_message(c.MSP_VOLTAGE_METERS,!1,!1,$)}function $(){T.send_message(c.MSP_CURRENT_METERS,!1,!1,U)}function U(){T.send_message(c.MSP_CURRENT_METER_CONFIG,!1,!1,x)}function x(){T.send_message(c.MSP_VOLTAGE_METER_CONFIG,!1,!1,L)}function L(){T.send_message(c.MSP_BATTERY_STATE,!1,!1,P)}function P(){T.send_message(c.MSP_BATTERY_CONFIG,!1,!1,k)}function k(){e("#content").load("./tabs/power.html",j)}this.supported=!0,V();function h(p,g){if(a.BATTERY_CONFIG.voltageMeterSource==0?e(".boxVoltageConfiguration").hide():e(".boxVoltageConfiguration").show(),!p){p=[];for(let t=0;t<a.VOLTAGE_METER_CONFIGS.length;t++)p[t]={vbatscale:parseInt(e(`input[name="vbatscale-${t}"]`).val()),vbatresdivval:parseInt(e(`input[name="vbatresdivval-${t}"]`).val()),vbatresdivmultiplier:parseInt(e(`input[name="vbatresdivmultiplier-${t}"]`).val())}}const m=e("#tab-power-templates .voltage-meters .voltage-meter"),_=e(".tab-power .voltage-meters");_.empty();for(let t=0;t<a.VOLTAGE_METERS.length;t++){const r=m.clone();e(r).attr("id",`voltage-meter-${t}`);const s=i.getMessage(`powerVoltageId${a.VOLTAGE_METERS[t].id}`);e(r).find(".label").text(s),_.append(r),r.hide(),(a.BATTERY_CONFIG.voltageMeterSource==1&&a.VOLTAGE_METERS[t].id==10||a.BATTERY_CONFIG.voltageMeterSource==2&&a.VOLTAGE_METERS[t].id>=50)&&r.show()}const M=e("#tab-power-templates .voltage-configuration");for(let t=0;t<a.VOLTAGE_METER_CONFIGS.length;t++){const r=e(`#voltage-meter-${t} .configuration`),s=M.clone(),f=["vbatscale","vbatresdivval","vbatresdivmultiplier"];for(let u of f)e(s).find(`input[name="${u}"]`).attr("name",`${u}-${t}`);r.append(s),e(`input[name="vbatscale-${t}"]`).val(p[t].vbatscale),e(`input[name="vbatresdivval-${t}"]`).val(p[t].vbatresdivval),e(`input[name="vbatresdivmultiplier-${t}"]`).val(p[t].vbatresdivmultiplier)}if(e('input[name="vbatscale-0"]').change(function(){const t=parseInt(e(this).val());t!==p[0].vbatscale&&(E.analyticsChanges.PowerVBatUpdated=t)}),a.BATTERY_CONFIG.currentMeterSource==0?e(".boxAmperageConfiguration").hide():e(".boxAmperageConfiguration").show(),!g){g=[];for(let t=0;t<a.CURRENT_METER_CONFIGS.length;t++)g[t]={scale:parseInt(e(`input[name="amperagescale-${t}"]`).val()),offset:parseInt(e(`input[name="amperageoffset-${t}"]`).val())}}const G=e("#tab-power-templates .amperage-meters .amperage-meter"),b=e(".tab-power .amperage-meters");b.empty();for(let t=0;t<a.CURRENT_METERS.length;t++){const r=G.clone();e(r).attr("id",`amperage-meter-${t}`);const s=i.getMessage(`powerAmperageId${a.CURRENT_METERS[t].id}`);e(r).find(".label").text(s),b.append(r),r.hide(),(a.BATTERY_CONFIG.currentMeterSource==1&&a.CURRENT_METERS[t].id==10||a.BATTERY_CONFIG.currentMeterSource==2&&a.CURRENT_METERS[t].id==80||a.BATTERY_CONFIG.currentMeterSource==3&&a.CURRENT_METERS[t].id>=50&&a.CURRENT_METERS[t].id<80)&&r.show()}const d=e("#tab-power-templates .amperage-configuration");for(let t=0;t<a.CURRENT_METER_CONFIGS.length;t++){const r=e(`#amperage-meter-${t} .configuration`),s=d.clone(),f=["amperagescale","amperageoffset"];for(let u of f)e(s).find(`input[name="${u}"]`).attr("name",`${u}-${t}`);r.append(s),e(`input[name="amperagescale-${t}"]`).val(g[t].scale),e(`input[name="amperageoffset-${t}"]`).val(g[t].offset)}e('input[name="amperagescale-0"]').change(function(){if(a.BATTERY_CONFIG.currentMeterSource===1){let t=parseInt(e(this).val());t!==g[0].scale&&(E.analyticsChanges.PowerAmperageUpdated=t)}}),e('input[name="amperagescale-1"]').change(function(){if(a.BATTERY_CONFIG.currentMeterSource===2){let t=parseInt(e(this).val());t!==g[1].scale&&(E.analyticsChanges.PowerAmperageUpdated=t)}}),a.BATTERY_CONFIG.voltageMeterSource==1||a.BATTERY_CONFIG.currentMeterSource==1||a.BATTERY_CONFIG.currentMeterSource==2?e(".calibration").show():e(".calibration").hide()}function z(){if(!w.power.supported){e(".tab-power").removeClass("supported");return}e(".tab-power").addClass("supported"),e("#calibrationmanagercontent").hide(),e("#calibrationmanagerconfirmcontent").hide();const p=e("#tab-power-templates .battery-state .battery-state"),g=e(".tab-power .battery-state"),m=p.clone();e(m).find(".connection-state").attr("id","battery-connection-state"),e(m).find(".voltage").attr("id","battery-voltage"),e(m).find(".mah-drawn").attr("id","battery-mah-drawn"),e(m).find(".amperage").attr("id","battery-amperage"),g.append(m.children());const _=e("#tab-power-templates .battery-configuration"),M=e(".tab-power .battery .configuration"),G=_.clone();M.append(G),e('input[name="mincellvoltage"]').prop("step","0.01"),e('input[name="maxcellvoltage"]').prop("step","0.01"),e('input[name="warningcellvoltage"]').prop("step","0.01"),e('input[name="mincellvoltage"]').val(a.BATTERY_CONFIG.vbatmincellvoltage),e('input[name="maxcellvoltage"]').val(a.BATTERY_CONFIG.vbatmaxcellvoltage),e('input[name="warningcellvoltage"]').val(a.BATTERY_CONFIG.vbatwarningcellvoltage),e('input[name="capacity"]').val(a.BATTERY_CONFIG.capacity);const b=a.CONFIG.boardType===0||a.CONFIG.boardType===2,d=[i.getMessage("powerBatteryVoltageMeterTypeNone"),i.getMessage("powerBatteryVoltageMeterTypeAdc")];b&&d.push(i.getMessage("powerBatteryVoltageMeterTypeEsc"));let t=e("#batterymetersourceSelect");for(let n=0;n<d.length;n++)t.append(new Option(d[n],n));t.sortSelect(d[0]);const r=[i.getMessage("powerBatteryCurrentMeterTypeNone"),i.getMessage("powerBatteryCurrentMeterTypeAdc")];b&&(r.push(i.getMessage("powerBatteryCurrentMeterTypeVirtual")),r.push(i.getMessage("powerBatteryCurrentMeterTypeEsc")),r.push(i.getMessage("powerBatteryCurrentMeterTypeMsp")));let s=e("#currentmetersourceSelect");for(let n=0;n<r.length;n++)s.append(new Option(r[n],n));s.sortSelect(r[0]),h(a.VOLTAGE_METER_CONFIGS,a.CURRENT_METER_CONFIGS),t=e("select.batterymetersource");let f=!1;t.val(a.BATTERY_CONFIG.voltageMeterSource),t.change(function(){a.BATTERY_CONFIG.voltageMeterSource=parseInt(e(this).val()),h(),f=!0}),s=e("select.currentmetersource"),s.val(a.BATTERY_CONFIG.currentMeterSource),s.change(function(){a.BATTERY_CONFIG.currentMeterSource=parseInt(e(this).val()),h(),f=!0});function u(){T.send_message(c.MSP_VOLTAGE_METERS,!1,!1,function(){for(let n=0;n<a.VOLTAGE_METERS.length;n++)e(`#voltage-meter-${n} .value`).text(i.getMessage("powerVoltageValue",[a.VOLTAGE_METERS[n].voltage]))}),T.send_message(c.MSP_CURRENT_METERS,!1,!1,function(){for(let n=0;n<a.CURRENT_METERS.length;n++)e(`#amperage-meter-${n} .value`).text(i.getMessage("powerAmperageValue",[a.CURRENT_METERS[n].amperage.toFixed(2)]))}),T.send_message(c.MSP_BATTERY_STATE,!1,!1,function(){const n="#battery";let l;l=e(`${n}-connection-state .value`),l.text(a.BATTERY_STATE.cellCount>0?i.getMessage("powerBatteryConnectedValueYes",[a.BATTERY_STATE.cellCount]):i.getMessage("powerBatteryConnectedValueNo")),l=e(`${n}-voltage .value`),l.text(i.getMessage("powerVoltageValue",[a.BATTERY_STATE.voltage])),l=e(`${n}-mah-drawn .value`),l.text(i.getMessage("powerMahValue",[a.BATTERY_STATE.mAhDrawn])),l=e(`${n}-amperage .value`),l.text(i.getMessage("powerAmperageValue",[a.BATTERY_STATE.amperage]))})}let y=!1;o.calibrationManager=new F("Modal",{width:400,height:230,closeButton:"title",animation:!1,attach:e("#calibrationmanager"),title:i.getMessage("powerCalibrationManagerTitle"),content:e("#calibrationmanagercontent"),onCloseComplete:function(){y||w.power.initialize()}}),o.calibrationManagerConfirmation=new F("Modal",{width:400,height:230,closeButton:"title",animation:!1,attach:e("#calibrate"),title:i.getMessage("powerCalibrationManagerConfirmationTitle"),content:e("#calibrationmanagerconfirmcontent"),onCloseComplete:function(){o.calibrationManager.close()}}),e("a.calibrationmanager").click(function(){a.BATTERY_CONFIG.voltageMeterSource==1&&a.BATTERY_STATE.voltage>.1?e(".vbatcalibration").show():e(".vbatcalibration").hide(),(a.BATTERY_CONFIG.currentMeterSource==1||a.BATTERY_CONFIG.currentMeterSource==2)&&a.BATTERY_STATE.amperage>.1?e(".amperagecalibration").show():e(".amperagecalibration").hide(),a.BATTERY_STATE.cellCount==0?(e(".vbatcalibration").hide(),e(".amperagecalibration").hide(),e(".calibrate").hide(),e(".nocalib").show()):(e(".calibrate").show(),e(".nocalib").hide()),f?(e(".srcchange").show(),e(".vbatcalibration").hide(),e(".amperagecalibration").hide(),e(".calibrate").hide(),e(".nocalib").hide()):e(".srcchange").hide()}),e('input[name="vbatcalibration"]').val(0),e('input[name="amperagecalibration"]').val(0);let A=!1,S=!1,C=0,v=0;e("a.calibrate").click(function(){if(a.BATTERY_CONFIG.voltageMeterSource==1){const l=parseFloat(e('input[name="vbatcalibration"]').val());l!=0&&(C=Math.round(a.VOLTAGE_METER_CONFIGS[0].vbatscale*(l/a.VOLTAGE_METERS[0].voltage)),C>=10&&C<=255&&(a.VOLTAGE_METER_CONFIGS[0].vbatscale=C,A=!0))}const n=a.BATTERY_CONFIG.currentMeterSource;if(n==1||n==2){const l=parseFloat(e('input[name="amperagecalibration"]').val()),N=a.CURRENT_METER_CONFIGS[n-1].offset/1e3;l!=0&&a.CURRENT_METERS[n-1].amperage!=N&&l!=N&&(v=Math.round(a.CURRENT_METER_CONFIGS[n-1].scale*((a.CURRENT_METERS[n-1].amperage-N)/(l-N))),v>-16e3&&v<16e3&&v!=0&&(a.CURRENT_METER_CONFIGS[n-1].scale=v,S=!0))}A||S?(A?e(".vbatcalibration").show():e(".vbatcalibration").hide(),S?e(".amperagecalibration").show():e(".amperagecalibration").hide(),e('output[name="vbatnewscale"').val(C),e('output[name="amperagenewscale"').val(v),e("a.applycalibration").click(function(){A&&(E.analyticsChanges.PowerVBatUpdated="Calibrated"),S&&(E.analyticsChanges.PowerAmperageUpdated="Calibrated"),y=!0,o.calibrationManagerConfirmation.close(),h(a.VOLTAGE_METER_CONFIGS,a.CURRENT_METER_CONFIGS),e(".calibration").hide()}),e("a.discardcalibration").click(function(){o.calibrationManagerConfirmation.close()})):o.calibrationManagerConfirmation.close()}),e("a.save").click(function(){for(let n=0;n<a.VOLTAGE_METER_CONFIGS.length;n++)a.VOLTAGE_METER_CONFIGS[n].vbatscale=parseInt(e(`input[name="vbatscale-${n}"]`).val()),a.VOLTAGE_METER_CONFIGS[n].vbatresdivval=parseInt(e(`input[name="vbatresdivval-${n}"]`).val()),a.VOLTAGE_METER_CONFIGS[n].vbatresdivmultiplier=parseInt(e(`input[name="vbatresdivmultiplier-${n}"]`).val());for(let n=0;n<a.CURRENT_METER_CONFIGS.length;n++)a.CURRENT_METER_CONFIGS[n].scale=parseInt(e(`input[name="amperagescale-${n}"]`).val()),a.CURRENT_METER_CONFIGS[n].offset=parseInt(e(`input[name="amperageoffset-${n}"]`).val());a.BATTERY_CONFIG.vbatmincellvoltage=parseFloat(e('input[name="mincellvoltage"]').val()),a.BATTERY_CONFIG.vbatmaxcellvoltage=parseFloat(e('input[name="maxcellvoltage"]').val()),a.BATTERY_CONFIG.vbatwarningcellvoltage=parseFloat(e('input[name="warningcellvoltage"]').val()),a.BATTERY_CONFIG.capacity=parseInt(e('input[name="capacity"]').val()),B.sendSaveAndChangeEvents(B.EVENT_CATEGORIES.FLIGHT_CONTROLLER,E.analyticsChanges,"power"),H()}),o.interval_add("setup_data_pull_slow",u,200,!0)}function H(){function p(){T.send_message(c.MSP_SET_BATTERY_CONFIG,O.crunch(c.MSP_SET_BATTERY_CONFIG),!1,g)}function g(){O.sendVoltageConfig(m)}function m(){O.sendCurrentConfig(_)}function _(){O.writeConfiguration(!1,M)}function M(){w.power.initialize()}p()}function j(){E.analyticsChanges={},i.localizePage(),z(),o.content_ready(R)}};I.cleanup=function(R){R&&R(),o.calibrationManager&&o.calibrationManager.destroy(),o.calibrationManagerConfirmation&&o.calibrationManagerConfirmation.destroy()};w.power=I;export{I as power};
